@using CaptchaMvc.HtmlHelpers
@model E_Recruitment.Models.ChangePasswordModel
@{
    Layout = "";
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=0">
    <link rel="shortcut icon" type="image/x-icon" href="~/assets/img/logo.png">
    <title>E-Recruitment</title>
    <link href="https://fonts.googleapis.com/css?family=Montserrat:300,400,500,600,700" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="~/assets/css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/font-awesome.min.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/dataTables.bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/select2.min.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/bootstrap-datetimepicker.min.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/style.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/CustomCss.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/material-dashboard-new.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/ladda-themeless.min.css">
    <link rel="stylesheet" href="~/assets/css/customFooter.css">
    <link rel="stylesheet" type="text/css" href="~/assets/css/CustomCss.css">
</head>
<body>
    <div class="main-wrapper">
        <div class="account-page">
            <div class="container">
                <div class="card">
                    <div class="card-header text-center backgroundcolor">
                        <h4 class="title"><i>E-Recruitment Change Password </i></h4>
                    </div>
                    <div class="form-group">
                        @if (TempData["error"] != null)
                        {

                            <div class="alert alert-danger" id="alert-danger" role="alert">
                                @TempData["error"]
                            </div>

                        }
                        else
                        {
                            <div class="alert alert-success" id="alert-success" role="alert">
                                @TempData["success"]
                            </div>
                        }
                    </div>
                    @using (Html.BeginForm("ChangePassword", "Home", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                    <div class="card-content">
                        <div class="account-box" style="width:1020px">
                            <div class="account-wrapper">
                                <div class="account-logo">
                                    <img src="~/assets/img/logo.png" width="40" height="5" alt="">
                                </div>
                                <div class="row">
                                    <div id="passwordresetfeedback" style="display: none" data-dismiss="alert"></div>
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Email, new { htmlAttributes = new { @class = "control-label col-md-2" } })
                                            <div class="form-group has-success has-feedback">
                                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control floating", @required = "required" } })
                                                <span class="glyphicon glyphicon-user form-control-feedback" aria-hidden="true"></span>
                                            </div>
                                            <div>
                                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "error" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Password, new { htmlAttributes = new { @class = "control-label col-md-2" } })
                                            <div class="form-group has-success has-feedback">
                                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control floating", @required = "required" } })
                                                <span class="glyphicon glyphicon-user form-control-feedback" aria-hidden="true"></span>
                                            </div>
                                            <div>
                                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "error" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.NewPassword, new { htmlAttributes = new { @class = "control-label col-md-2" } })
                                            <div class="form-group has-success has-feedback">
                                                @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control floating", @required = "required" } })
                                                <span class="glyphicon glyphicon-user form-control-feedback" aria-hidden="true"></span>
                                            </div>
                                            <div>
                                                @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "error" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="form-group">
                                           @Html.LabelFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "control-label col-md-2" } })
                                        <div class="form-group has-success has-feedback">
                                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control floating", @required = "required" } })
                                            <span class="glyphicon glyphicon-user form-control-feedback" aria-hidden="true"></span>
                                        </div>
                                        <div>
                                            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "error" })
                                        </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group text-center">
                                    <input type="submit" value="Reset Password" class="btn btn-primary btn-block account-btn ladda-button" />
                                </div>
                                <div class="text-center">
                                    @Html.ActionLink("Back to Login", "Login", "Home", null, new { @class = "btn btn-danger ladda-button" })
                                </div>
                            </div>
                        </div>
                     </div>
                    }
                   </div>
                 </div>
                </div>
            </div>
    <div class="sidebar-overlay" data-reff="#sidebar"></div>
    <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script type="text/javascript" src="~/assets/js/jquery-3.2.1.min.js"></script>
    <script type="text/javascript" src="~/assets/js/bootstrap.min.js"></script>
    <script type="text/javascript" src="~/assets/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript" src="~/assets/js/dataTables.bootstrap.min.js"></script>
    <script type="text/javascript" src="~/assets/js/jquery.slimscroll.js"></script>
    <script type="text/javascript" src="~/assets/js/select2.min.js"></script>
    <script type="text/javascript" src="~/assets/js/moment.min.js"></script>
    <script type="text/javascript" src="~/assets/js/bootstrap-datetimepicker.min.js"></script>
    <script type="text/javascript" src="~/assets/js/app.js"></script>
    <script type="text/javascript" src="~/assets/customJs/supplierRegistration.js"></script>
    <script type="text/javascript" src="~/assets/customJs/sweetalert.min.js"></script>
    <script type="text/javascript" src="~/assets/CutsomJs/RegisterNewCandidate.js"></script>
    <script type="text/javascript" src="~/assets/CutsomJs/ResetPassword.js"></script>
    <!-- Sweet Alert Js -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@8"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.js"></script>
</body>
</html>


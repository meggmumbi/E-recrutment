//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace E_Recruitment.eRecruitment {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="eRecruitment_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment")]
    public partial class eRecruitment : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback FnSubmitApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRegistrationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnResetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetSendEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnApplicantProfileRegistrationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAcademicQualificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdateAcademicQualificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnApplicationAcademicQualificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdateApplicationAcademicQualificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnProffessionalQualificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdateProffessionalQualificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnApplicationProffessionalQualificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnProffessionaBodiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdateProffessionaBodiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnApplicationProffessionaBodiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnWorkExperienceOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnUpdateWorkExperienceOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnApplicationWorkExperienceOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCandidateRefereesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnApplicationCandidateRefereesOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnJobApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnPrepopulateApplicantProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitProfileApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnChangeCandidatePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendAccountActivationLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteAacademicDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteJobAcademicDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteProffessionalQualificationDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteProffessionalQualificationBodiesDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteWorkExperienceDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteRefereeDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteJobProffesionalQualificationDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteJobProffesionalBodiesDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteJobApplicationRefereeDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateCandidateDocumentsLinkOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public eRecruitment() {
            this.Url = global::E_Recruitment.Properties.Settings.Default.E_Recruitment_eRecruitment_eRecruitment;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event FnSubmitApplicationCompletedEventHandler FnSubmitApplicationCompleted;
        
        /// <remarks/>
        public event FnRegistrationCompletedEventHandler FnRegistrationCompleted;
        
        /// <remarks/>
        public event FnResetPasswordCompletedEventHandler FnResetPasswordCompleted;
        
        /// <remarks/>
        public event ResetSendEmailCompletedEventHandler ResetSendEmailCompleted;
        
        /// <remarks/>
        public event FnApplicantProfileRegistrationCompletedEventHandler FnApplicantProfileRegistrationCompleted;
        
        /// <remarks/>
        public event FnAcademicQualificationsCompletedEventHandler FnAcademicQualificationsCompleted;
        
        /// <remarks/>
        public event FnUpdateAcademicQualificationsCompletedEventHandler FnUpdateAcademicQualificationsCompleted;
        
        /// <remarks/>
        public event FnApplicationAcademicQualificationsCompletedEventHandler FnApplicationAcademicQualificationsCompleted;
        
        /// <remarks/>
        public event FnUpdateApplicationAcademicQualificationsCompletedEventHandler FnUpdateApplicationAcademicQualificationsCompleted;
        
        /// <remarks/>
        public event FnProffessionalQualificationsCompletedEventHandler FnProffessionalQualificationsCompleted;
        
        /// <remarks/>
        public event FnUpdateProffessionalQualificationsCompletedEventHandler FnUpdateProffessionalQualificationsCompleted;
        
        /// <remarks/>
        public event FnApplicationProffessionalQualificationsCompletedEventHandler FnApplicationProffessionalQualificationsCompleted;
        
        /// <remarks/>
        public event FnProffessionaBodiesCompletedEventHandler FnProffessionaBodiesCompleted;
        
        /// <remarks/>
        public event FnUpdateProffessionaBodiesCompletedEventHandler FnUpdateProffessionaBodiesCompleted;
        
        /// <remarks/>
        public event FnApplicationProffessionaBodiesCompletedEventHandler FnApplicationProffessionaBodiesCompleted;
        
        /// <remarks/>
        public event FnWorkExperienceCompletedEventHandler FnWorkExperienceCompleted;
        
        /// <remarks/>
        public event FnUpdateWorkExperienceCompletedEventHandler FnUpdateWorkExperienceCompleted;
        
        /// <remarks/>
        public event FnApplicationWorkExperienceCompletedEventHandler FnApplicationWorkExperienceCompleted;
        
        /// <remarks/>
        public event FnCandidateRefereesCompletedEventHandler FnCandidateRefereesCompleted;
        
        /// <remarks/>
        public event FnApplicationCandidateRefereesCompletedEventHandler FnApplicationCandidateRefereesCompleted;
        
        /// <remarks/>
        public event FnJobApplicationCompletedEventHandler FnJobApplicationCompleted;
        
        /// <remarks/>
        public event FnPrepopulateApplicantProfileCompletedEventHandler FnPrepopulateApplicantProfileCompleted;
        
        /// <remarks/>
        public event FnSubmitProfileApplicationCompletedEventHandler FnSubmitProfileApplicationCompleted;
        
        /// <remarks/>
        public event FnChangeCandidatePasswordCompletedEventHandler FnChangeCandidatePasswordCompleted;
        
        /// <remarks/>
        public event SendAccountActivationLinkCompletedEventHandler SendAccountActivationLinkCompleted;
        
        /// <remarks/>
        public event FnDeleteAacademicDetailsCompletedEventHandler FnDeleteAacademicDetailsCompleted;
        
        /// <remarks/>
        public event FnDeleteJobAcademicDetailsCompletedEventHandler FnDeleteJobAcademicDetailsCompleted;
        
        /// <remarks/>
        public event FnDeleteProffessionalQualificationDetailsCompletedEventHandler FnDeleteProffessionalQualificationDetailsCompleted;
        
        /// <remarks/>
        public event FnDeleteProffessionalQualificationBodiesDetailsCompletedEventHandler FnDeleteProffessionalQualificationBodiesDetailsCompleted;
        
        /// <remarks/>
        public event FnDeleteWorkExperienceDetailsCompletedEventHandler FnDeleteWorkExperienceDetailsCompleted;
        
        /// <remarks/>
        public event FnDeleteRefereeDetailsCompletedEventHandler FnDeleteRefereeDetailsCompleted;
        
        /// <remarks/>
        public event FnDeleteJobProffesionalQualificationDetailsCompletedEventHandler FnDeleteJobProffesionalQualificationDetailsCompleted;
        
        /// <remarks/>
        public event FnDeleteJobProffesionalBodiesDetailsCompletedEventHandler FnDeleteJobProffesionalBodiesDetailsCompleted;
        
        /// <remarks/>
        public event FnDeleteJobApplicationRefereeDetailsCompletedEventHandler FnDeleteJobApplicationRefereeDetailsCompleted;
        
        /// <remarks/>
        public event FnCreateCandidateDocumentsLinkCompletedEventHandler FnCreateCandidateDocumentsLinkCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eRecruitment:FnSubmitApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", ResponseElementName="FnSubmitApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitApplication(string applicantNumber, string jobAppplicationNumber) {
            object[] results = this.Invoke("FnSubmitApplication", new object[] {
                        applicantNumber,
                        jobAppplicationNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitApplicationAsync(string applicantNumber, string jobAppplicationNumber) {
            this.FnSubmitApplicationAsync(applicantNumber, jobAppplicationNumber, null);
        }
        
        /// <remarks/>
        public void FnSubmitApplicationAsync(string applicantNumber, string jobAppplicationNumber, object userState) {
            if ((this.FnSubmitApplicationOperationCompleted == null)) {
                this.FnSubmitApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitApplicationOperationCompleted);
            }
            this.InvokeAsync("FnSubmitApplication", new object[] {
                        applicantNumber,
                        jobAppplicationNumber}, this.FnSubmitApplicationOperationCompleted, userState);
        }
        
        private void OnFnSubmitApplicationOperationCompleted(object arg) {
            if ((this.FnSubmitApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitApplicationCompleted(this, new FnSubmitApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eRecruitment:FnRegistration", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", ResponseElementName="FnRegistration_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnRegistration(string idnumber, string firstname, string lastname, string middlename, string email, string phoneNumber) {
            object[] results = this.Invoke("FnRegistration", new object[] {
                        idnumber,
                        firstname,
                        lastname,
                        middlename,
                        email,
                        phoneNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnRegistrationAsync(string idnumber, string firstname, string lastname, string middlename, string email, string phoneNumber) {
            this.FnRegistrationAsync(idnumber, firstname, lastname, middlename, email, phoneNumber, null);
        }
        
        /// <remarks/>
        public void FnRegistrationAsync(string idnumber, string firstname, string lastname, string middlename, string email, string phoneNumber, object userState) {
            if ((this.FnRegistrationOperationCompleted == null)) {
                this.FnRegistrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRegistrationOperationCompleted);
            }
            this.InvokeAsync("FnRegistration", new object[] {
                        idnumber,
                        firstname,
                        lastname,
                        middlename,
                        email,
                        phoneNumber}, this.FnRegistrationOperationCompleted, userState);
        }
        
        private void OnFnRegistrationOperationCompleted(object arg) {
            if ((this.FnRegistrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRegistrationCompleted(this, new FnRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eRecruitment:FnResetPassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", ResponseElementName="FnResetPassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnResetPassword(string emailaddress) {
            object[] results = this.Invoke("FnResetPassword", new object[] {
                        emailaddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnResetPasswordAsync(string emailaddress) {
            this.FnResetPasswordAsync(emailaddress, null);
        }
        
        /// <remarks/>
        public void FnResetPasswordAsync(string emailaddress, object userState) {
            if ((this.FnResetPasswordOperationCompleted == null)) {
                this.FnResetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnResetPasswordOperationCompleted);
            }
            this.InvokeAsync("FnResetPassword", new object[] {
                        emailaddress}, this.FnResetPasswordOperationCompleted, userState);
        }
        
        private void OnFnResetPasswordOperationCompleted(object arg) {
            if ((this.FnResetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnResetPasswordCompleted(this, new FnResetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eRecruitment:ResetSendEmail", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", ResponseElementName="ResetSendEmail_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ResetSendEmail(string emailaddress) {
            this.Invoke("ResetSendEmail", new object[] {
                        emailaddress});
        }
        
        /// <remarks/>
        public void ResetSendEmailAsync(string emailaddress) {
            this.ResetSendEmailAsync(emailaddress, null);
        }
        
        /// <remarks/>
        public void ResetSendEmailAsync(string emailaddress, object userState) {
            if ((this.ResetSendEmailOperationCompleted == null)) {
                this.ResetSendEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetSendEmailOperationCompleted);
            }
            this.InvokeAsync("ResetSendEmail", new object[] {
                        emailaddress}, this.ResetSendEmailOperationCompleted, userState);
        }
        
        private void OnResetSendEmailOperationCompleted(object arg) {
            if ((this.ResetSendEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetSendEmailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eRecruitment:FnApplicantProfileRegistrati" +
            "on", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", ResponseElementName="FnApplicantProfileRegistration_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnApplicantProfileRegistration(
                    int prefix, 
                    string applicantNumber, 
                    string surname, 
                    string firstname, 
                    string othernames, 
                    int gender, 
                    int idnumber, 
                    string passportnumber, 
                    string nationality, 
                    int religion, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofbirth, 
                    string countyofresidence, 
                    string countyoforigin, 
                    string ethnicity, 
                    string nhif, 
                    string nssf, 
                    string mobilephonenumber, 
                    string krapin, 
                    int maritalstatus, 
                    string address, 
                    string disabilitycertificate, 
                    string disabilitysummary, 
                    string phonenumber2, 
                    bool isdisable, 
                    string postalcodes, 
                    string skillscompetencies, 
                    int managementyears, 
                    int workexperienceyears, 
                    int educationlevel) {
            object[] results = this.Invoke("FnApplicantProfileRegistration", new object[] {
                        prefix,
                        applicantNumber,
                        surname,
                        firstname,
                        othernames,
                        gender,
                        idnumber,
                        passportnumber,
                        nationality,
                        religion,
                        dateofbirth,
                        countyofresidence,
                        countyoforigin,
                        ethnicity,
                        nhif,
                        nssf,
                        mobilephonenumber,
                        krapin,
                        maritalstatus,
                        address,
                        disabilitycertificate,
                        disabilitysummary,
                        phonenumber2,
                        isdisable,
                        postalcodes,
                        skillscompetencies,
                        managementyears,
                        workexperienceyears,
                        educationlevel});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnApplicantProfileRegistrationAsync(
                    int prefix, 
                    string applicantNumber, 
                    string surname, 
                    string firstname, 
                    string othernames, 
                    int gender, 
                    int idnumber, 
                    string passportnumber, 
                    string nationality, 
                    int religion, 
                    System.DateTime dateofbirth, 
                    string countyofresidence, 
                    string countyoforigin, 
                    string ethnicity, 
                    string nhif, 
                    string nssf, 
                    string mobilephonenumber, 
                    string krapin, 
                    int maritalstatus, 
                    string address, 
                    string disabilitycertificate, 
                    string disabilitysummary, 
                    string phonenumber2, 
                    bool isdisable, 
                    string postalcodes, 
                    string skillscompetencies, 
                    int managementyears, 
                    int workexperienceyears, 
                    int educationlevel) {
            this.FnApplicantProfileRegistrationAsync(prefix, applicantNumber, surname, firstname, othernames, gender, idnumber, passportnumber, nationality, religion, dateofbirth, countyofresidence, countyoforigin, ethnicity, nhif, nssf, mobilephonenumber, krapin, maritalstatus, address, disabilitycertificate, disabilitysummary, phonenumber2, isdisable, postalcodes, skillscompetencies, managementyears, workexperienceyears, educationlevel, null);
        }
        
        /// <remarks/>
        public void FnApplicantProfileRegistrationAsync(
                    int prefix, 
                    string applicantNumber, 
                    string surname, 
                    string firstname, 
                    string othernames, 
                    int gender, 
                    int idnumber, 
                    string passportnumber, 
                    string nationality, 
                    int religion, 
                    System.DateTime dateofbirth, 
                    string countyofresidence, 
                    string countyoforigin, 
                    string ethnicity, 
                    string nhif, 
                    string nssf, 
                    string mobilephonenumber, 
                    string krapin, 
                    int maritalstatus, 
                    string address, 
                    string disabilitycertificate, 
                    string disabilitysummary, 
                    string phonenumber2, 
                    bool isdisable, 
                    string postalcodes, 
                    string skillscompetencies, 
                    int managementyears, 
                    int workexperienceyears, 
                    int educationlevel, 
                    object userState) {
            if ((this.FnApplicantProfileRegistrationOperationCompleted == null)) {
                this.FnApplicantProfileRegistrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnApplicantProfileRegistrationOperationCompleted);
            }
            this.InvokeAsync("FnApplicantProfileRegistration", new object[] {
                        prefix,
                        applicantNumber,
                        surname,
                        firstname,
                        othernames,
                        gender,
                        idnumber,
                        passportnumber,
                        nationality,
                        religion,
                        dateofbirth,
                        countyofresidence,
                        countyoforigin,
                        ethnicity,
                        nhif,
                        nssf,
                        mobilephonenumber,
                        krapin,
                        maritalstatus,
                        address,
                        disabilitycertificate,
                        disabilitysummary,
                        phonenumber2,
                        isdisable,
                        postalcodes,
                        skillscompetencies,
                        managementyears,
                        workexperienceyears,
                        educationlevel}, this.FnApplicantProfileRegistrationOperationCompleted, userState);
        }
        
        private void OnFnApplicantProfileRegistrationOperationCompleted(object arg) {
            if ((this.FnApplicantProfileRegistrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnApplicantProfileRegistrationCompleted(this, new FnApplicantProfileRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eRecruitment:FnAcademicQualifications", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", ResponseElementName="FnAcademicQualifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnAcademicQualifications(string applicantNumber, int educationlevel, string institutionname, string country, string qualificationtitle, string specializationarea, int attainedscore, string graduationyear, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime enddate) {
            object[] results = this.Invoke("FnAcademicQualifications", new object[] {
                        applicantNumber,
                        educationlevel,
                        institutionname,
                        country,
                        qualificationtitle,
                        specializationarea,
                        attainedscore,
                        graduationyear,
                        startdate,
                        enddate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnAcademicQualificationsAsync(string applicantNumber, int educationlevel, string institutionname, string country, string qualificationtitle, string specializationarea, int attainedscore, string graduationyear, System.DateTime startdate, System.DateTime enddate) {
            this.FnAcademicQualificationsAsync(applicantNumber, educationlevel, institutionname, country, qualificationtitle, specializationarea, attainedscore, graduationyear, startdate, enddate, null);
        }
        
        /// <remarks/>
        public void FnAcademicQualificationsAsync(string applicantNumber, int educationlevel, string institutionname, string country, string qualificationtitle, string specializationarea, int attainedscore, string graduationyear, System.DateTime startdate, System.DateTime enddate, object userState) {
            if ((this.FnAcademicQualificationsOperationCompleted == null)) {
                this.FnAcademicQualificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAcademicQualificationsOperationCompleted);
            }
            this.InvokeAsync("FnAcademicQualifications", new object[] {
                        applicantNumber,
                        educationlevel,
                        institutionname,
                        country,
                        qualificationtitle,
                        specializationarea,
                        attainedscore,
                        graduationyear,
                        startdate,
                        enddate}, this.FnAcademicQualificationsOperationCompleted, userState);
        }
        
        private void OnFnAcademicQualificationsOperationCompleted(object arg) {
            if ((this.FnAcademicQualificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAcademicQualificationsCompleted(this, new FnAcademicQualificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eRecruitment:FnUpdateAcademicQualificatio" +
            "ns", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", ResponseElementName="FnUpdateAcademicQualifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUpdateAcademicQualifications(string applicantNumber, int entryNumber, int educationlevel, string institutionname, string country, string qualificationtitle, string specializationarea, int attainedscore, string graduationyear, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime enddate) {
            object[] results = this.Invoke("FnUpdateAcademicQualifications", new object[] {
                        applicantNumber,
                        entryNumber,
                        educationlevel,
                        institutionname,
                        country,
                        qualificationtitle,
                        specializationarea,
                        attainedscore,
                        graduationyear,
                        startdate,
                        enddate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUpdateAcademicQualificationsAsync(string applicantNumber, int entryNumber, int educationlevel, string institutionname, string country, string qualificationtitle, string specializationarea, int attainedscore, string graduationyear, System.DateTime startdate, System.DateTime enddate) {
            this.FnUpdateAcademicQualificationsAsync(applicantNumber, entryNumber, educationlevel, institutionname, country, qualificationtitle, specializationarea, attainedscore, graduationyear, startdate, enddate, null);
        }
        
        /// <remarks/>
        public void FnUpdateAcademicQualificationsAsync(string applicantNumber, int entryNumber, int educationlevel, string institutionname, string country, string qualificationtitle, string specializationarea, int attainedscore, string graduationyear, System.DateTime startdate, System.DateTime enddate, object userState) {
            if ((this.FnUpdateAcademicQualificationsOperationCompleted == null)) {
                this.FnUpdateAcademicQualificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdateAcademicQualificationsOperationCompleted);
            }
            this.InvokeAsync("FnUpdateAcademicQualifications", new object[] {
                        applicantNumber,
                        entryNumber,
                        educationlevel,
                        institutionname,
                        country,
                        qualificationtitle,
                        specializationarea,
                        attainedscore,
                        graduationyear,
                        startdate,
                        enddate}, this.FnUpdateAcademicQualificationsOperationCompleted, userState);
        }
        
        private void OnFnUpdateAcademicQualificationsOperationCompleted(object arg) {
            if ((this.FnUpdateAcademicQualificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdateAcademicQualificationsCompleted(this, new FnUpdateAcademicQualificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eRecruitment:FnApplicationAcademicQualifi" +
            "cations", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", ResponseElementName="FnApplicationAcademicQualifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnApplicationAcademicQualifications(string applicantNumber, string jobApplicationNo, int educationlevel, string institutionname, string country, string qualificationtitle, string specializationarea, int attainedscore, string graduationyear, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime enddate) {
            object[] results = this.Invoke("FnApplicationAcademicQualifications", new object[] {
                        applicantNumber,
                        jobApplicationNo,
                        educationlevel,
                        institutionname,
                        country,
                        qualificationtitle,
                        specializationarea,
                        attainedscore,
                        graduationyear,
                        startdate,
                        enddate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnApplicationAcademicQualificationsAsync(string applicantNumber, string jobApplicationNo, int educationlevel, string institutionname, string country, string qualificationtitle, string specializationarea, int attainedscore, string graduationyear, System.DateTime startdate, System.DateTime enddate) {
            this.FnApplicationAcademicQualificationsAsync(applicantNumber, jobApplicationNo, educationlevel, institutionname, country, qualificationtitle, specializationarea, attainedscore, graduationyear, startdate, enddate, null);
        }
        
        /// <remarks/>
        public void FnApplicationAcademicQualificationsAsync(string applicantNumber, string jobApplicationNo, int educationlevel, string institutionname, string country, string qualificationtitle, string specializationarea, int attainedscore, string graduationyear, System.DateTime startdate, System.DateTime enddate, object userState) {
            if ((this.FnApplicationAcademicQualificationsOperationCompleted == null)) {
                this.FnApplicationAcademicQualificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnApplicationAcademicQualificationsOperationCompleted);
            }
            this.InvokeAsync("FnApplicationAcademicQualifications", new object[] {
                        applicantNumber,
                        jobApplicationNo,
                        educationlevel,
                        institutionname,
                        country,
                        qualificationtitle,
                        specializationarea,
                        attainedscore,
                        graduationyear,
                        startdate,
                        enddate}, this.FnApplicationAcademicQualificationsOperationCompleted, userState);
        }
        
        private void OnFnApplicationAcademicQualificationsOperationCompleted(object arg) {
            if ((this.FnApplicationAcademicQualificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnApplicationAcademicQualificationsCompleted(this, new FnApplicationAcademicQualificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eRecruitment:FnUpdateApplicationAcademicQ" +
            "ualifications", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", ResponseElementName="FnUpdateApplicationAcademicQualifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUpdateApplicationAcademicQualifications(string applicantNumber, int entryNumber, string jobApplicationNo, int educationlevel, string institutionname, string country, string qualificationtitle, string specializationarea, int attainedscore, string graduationyear, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime enddate) {
            object[] results = this.Invoke("FnUpdateApplicationAcademicQualifications", new object[] {
                        applicantNumber,
                        entryNumber,
                        jobApplicationNo,
                        educationlevel,
                        institutionname,
                        country,
                        qualificationtitle,
                        specializationarea,
                        attainedscore,
                        graduationyear,
                        startdate,
                        enddate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUpdateApplicationAcademicQualificationsAsync(string applicantNumber, int entryNumber, string jobApplicationNo, int educationlevel, string institutionname, string country, string qualificationtitle, string specializationarea, int attainedscore, string graduationyear, System.DateTime startdate, System.DateTime enddate) {
            this.FnUpdateApplicationAcademicQualificationsAsync(applicantNumber, entryNumber, jobApplicationNo, educationlevel, institutionname, country, qualificationtitle, specializationarea, attainedscore, graduationyear, startdate, enddate, null);
        }
        
        /// <remarks/>
        public void FnUpdateApplicationAcademicQualificationsAsync(string applicantNumber, int entryNumber, string jobApplicationNo, int educationlevel, string institutionname, string country, string qualificationtitle, string specializationarea, int attainedscore, string graduationyear, System.DateTime startdate, System.DateTime enddate, object userState) {
            if ((this.FnUpdateApplicationAcademicQualificationsOperationCompleted == null)) {
                this.FnUpdateApplicationAcademicQualificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdateApplicationAcademicQualificationsOperationCompleted);
            }
            this.InvokeAsync("FnUpdateApplicationAcademicQualifications", new object[] {
                        applicantNumber,
                        entryNumber,
                        jobApplicationNo,
                        educationlevel,
                        institutionname,
                        country,
                        qualificationtitle,
                        specializationarea,
                        attainedscore,
                        graduationyear,
                        startdate,
                        enddate}, this.FnUpdateApplicationAcademicQualificationsOperationCompleted, userState);
        }
        
        private void OnFnUpdateApplicationAcademicQualificationsOperationCompleted(object arg) {
            if ((this.FnUpdateApplicationAcademicQualificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdateApplicationAcademicQualificationsCompleted(this, new FnUpdateApplicationAcademicQualificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eRecruitment:FnProffessionalQualification" +
            "s", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", ResponseElementName="FnProffessionalQualifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnProffessionalQualifications(string applicantNumber, string educationlevel, string institutionname, string country, string qualificationtitle, string specializationarea, int attainedscore, string graduationyear, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime enddate) {
            object[] results = this.Invoke("FnProffessionalQualifications", new object[] {
                        applicantNumber,
                        educationlevel,
                        institutionname,
                        country,
                        qualificationtitle,
                        specializationarea,
                        attainedscore,
                        graduationyear,
                        startdate,
                        enddate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnProffessionalQualificationsAsync(string applicantNumber, string educationlevel, string institutionname, string country, string qualificationtitle, string specializationarea, int attainedscore, string graduationyear, System.DateTime startdate, System.DateTime enddate) {
            this.FnProffessionalQualificationsAsync(applicantNumber, educationlevel, institutionname, country, qualificationtitle, specializationarea, attainedscore, graduationyear, startdate, enddate, null);
        }
        
        /// <remarks/>
        public void FnProffessionalQualificationsAsync(string applicantNumber, string educationlevel, string institutionname, string country, string qualificationtitle, string specializationarea, int attainedscore, string graduationyear, System.DateTime startdate, System.DateTime enddate, object userState) {
            if ((this.FnProffessionalQualificationsOperationCompleted == null)) {
                this.FnProffessionalQualificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnProffessionalQualificationsOperationCompleted);
            }
            this.InvokeAsync("FnProffessionalQualifications", new object[] {
                        applicantNumber,
                        educationlevel,
                        institutionname,
                        country,
                        qualificationtitle,
                        specializationarea,
                        attainedscore,
                        graduationyear,
                        startdate,
                        enddate}, this.FnProffessionalQualificationsOperationCompleted, userState);
        }
        
        private void OnFnProffessionalQualificationsOperationCompleted(object arg) {
            if ((this.FnProffessionalQualificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnProffessionalQualificationsCompleted(this, new FnProffessionalQualificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eRecruitment:FnUpdateProffessionalQualifi" +
            "cations", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", ResponseElementName="FnUpdateProffessionalQualifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUpdateProffessionalQualifications(int entryNo, string applicantNumber, string educationlevel, string institutionname, string country, string qualificationtitle, string specializationarea, int attainedscore, string graduationyear, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime enddate) {
            object[] results = this.Invoke("FnUpdateProffessionalQualifications", new object[] {
                        entryNo,
                        applicantNumber,
                        educationlevel,
                        institutionname,
                        country,
                        qualificationtitle,
                        specializationarea,
                        attainedscore,
                        graduationyear,
                        startdate,
                        enddate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUpdateProffessionalQualificationsAsync(int entryNo, string applicantNumber, string educationlevel, string institutionname, string country, string qualificationtitle, string specializationarea, int attainedscore, string graduationyear, System.DateTime startdate, System.DateTime enddate) {
            this.FnUpdateProffessionalQualificationsAsync(entryNo, applicantNumber, educationlevel, institutionname, country, qualificationtitle, specializationarea, attainedscore, graduationyear, startdate, enddate, null);
        }
        
        /// <remarks/>
        public void FnUpdateProffessionalQualificationsAsync(int entryNo, string applicantNumber, string educationlevel, string institutionname, string country, string qualificationtitle, string specializationarea, int attainedscore, string graduationyear, System.DateTime startdate, System.DateTime enddate, object userState) {
            if ((this.FnUpdateProffessionalQualificationsOperationCompleted == null)) {
                this.FnUpdateProffessionalQualificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdateProffessionalQualificationsOperationCompleted);
            }
            this.InvokeAsync("FnUpdateProffessionalQualifications", new object[] {
                        entryNo,
                        applicantNumber,
                        educationlevel,
                        institutionname,
                        country,
                        qualificationtitle,
                        specializationarea,
                        attainedscore,
                        graduationyear,
                        startdate,
                        enddate}, this.FnUpdateProffessionalQualificationsOperationCompleted, userState);
        }
        
        private void OnFnUpdateProffessionalQualificationsOperationCompleted(object arg) {
            if ((this.FnUpdateProffessionalQualificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdateProffessionalQualificationsCompleted(this, new FnUpdateProffessionalQualificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eRecruitment:FnApplicationProffessionalQu" +
            "alifications", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", ResponseElementName="FnApplicationProffessionalQualifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnApplicationProffessionalQualifications(string applicantNumber, string jobApplicationNo, string proffesionalQualification, string institutionname, string country, string qualificationtitle, string specializationarea, int attainedscore, string graduationyear, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime enddate) {
            object[] results = this.Invoke("FnApplicationProffessionalQualifications", new object[] {
                        applicantNumber,
                        jobApplicationNo,
                        proffesionalQualification,
                        institutionname,
                        country,
                        qualificationtitle,
                        specializationarea,
                        attainedscore,
                        graduationyear,
                        startdate,
                        enddate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnApplicationProffessionalQualificationsAsync(string applicantNumber, string jobApplicationNo, string proffesionalQualification, string institutionname, string country, string qualificationtitle, string specializationarea, int attainedscore, string graduationyear, System.DateTime startdate, System.DateTime enddate) {
            this.FnApplicationProffessionalQualificationsAsync(applicantNumber, jobApplicationNo, proffesionalQualification, institutionname, country, qualificationtitle, specializationarea, attainedscore, graduationyear, startdate, enddate, null);
        }
        
        /// <remarks/>
        public void FnApplicationProffessionalQualificationsAsync(string applicantNumber, string jobApplicationNo, string proffesionalQualification, string institutionname, string country, string qualificationtitle, string specializationarea, int attainedscore, string graduationyear, System.DateTime startdate, System.DateTime enddate, object userState) {
            if ((this.FnApplicationProffessionalQualificationsOperationCompleted == null)) {
                this.FnApplicationProffessionalQualificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnApplicationProffessionalQualificationsOperationCompleted);
            }
            this.InvokeAsync("FnApplicationProffessionalQualifications", new object[] {
                        applicantNumber,
                        jobApplicationNo,
                        proffesionalQualification,
                        institutionname,
                        country,
                        qualificationtitle,
                        specializationarea,
                        attainedscore,
                        graduationyear,
                        startdate,
                        enddate}, this.FnApplicationProffessionalQualificationsOperationCompleted, userState);
        }
        
        private void OnFnApplicationProffessionalQualificationsOperationCompleted(object arg) {
            if ((this.FnApplicationProffessionalQualificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnApplicationProffessionalQualificationsCompleted(this, new FnApplicationProffessionalQualificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eRecruitment:FnProffessionaBodies", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", ResponseElementName="FnProffessionaBodies_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnProffessionaBodies(string applicantNumber, string professionalbody, string registrationNumber, string membershipType, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime renewalDate, string licensingNumber, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime licenseRenewalDate) {
            object[] results = this.Invoke("FnProffessionaBodies", new object[] {
                        applicantNumber,
                        professionalbody,
                        registrationNumber,
                        membershipType,
                        renewalDate,
                        licensingNumber,
                        licenseRenewalDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnProffessionaBodiesAsync(string applicantNumber, string professionalbody, string registrationNumber, string membershipType, System.DateTime renewalDate, string licensingNumber, System.DateTime licenseRenewalDate) {
            this.FnProffessionaBodiesAsync(applicantNumber, professionalbody, registrationNumber, membershipType, renewalDate, licensingNumber, licenseRenewalDate, null);
        }
        
        /// <remarks/>
        public void FnProffessionaBodiesAsync(string applicantNumber, string professionalbody, string registrationNumber, string membershipType, System.DateTime renewalDate, string licensingNumber, System.DateTime licenseRenewalDate, object userState) {
            if ((this.FnProffessionaBodiesOperationCompleted == null)) {
                this.FnProffessionaBodiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnProffessionaBodiesOperationCompleted);
            }
            this.InvokeAsync("FnProffessionaBodies", new object[] {
                        applicantNumber,
                        professionalbody,
                        registrationNumber,
                        membershipType,
                        renewalDate,
                        licensingNumber,
                        licenseRenewalDate}, this.FnProffessionaBodiesOperationCompleted, userState);
        }
        
        private void OnFnProffessionaBodiesOperationCompleted(object arg) {
            if ((this.FnProffessionaBodiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnProffessionaBodiesCompleted(this, new FnProffessionaBodiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eRecruitment:FnUpdateProffessionaBodies", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", ResponseElementName="FnUpdateProffessionaBodies_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUpdateProffessionaBodies(int entryNumber, string applicantNumber, string professionalbody, string registrationNumber, string membershipType, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime renewalDate, string licensingNumber, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime licenseRenewalDate) {
            object[] results = this.Invoke("FnUpdateProffessionaBodies", new object[] {
                        entryNumber,
                        applicantNumber,
                        professionalbody,
                        registrationNumber,
                        membershipType,
                        renewalDate,
                        licensingNumber,
                        licenseRenewalDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUpdateProffessionaBodiesAsync(int entryNumber, string applicantNumber, string professionalbody, string registrationNumber, string membershipType, System.DateTime renewalDate, string licensingNumber, System.DateTime licenseRenewalDate) {
            this.FnUpdateProffessionaBodiesAsync(entryNumber, applicantNumber, professionalbody, registrationNumber, membershipType, renewalDate, licensingNumber, licenseRenewalDate, null);
        }
        
        /// <remarks/>
        public void FnUpdateProffessionaBodiesAsync(int entryNumber, string applicantNumber, string professionalbody, string registrationNumber, string membershipType, System.DateTime renewalDate, string licensingNumber, System.DateTime licenseRenewalDate, object userState) {
            if ((this.FnUpdateProffessionaBodiesOperationCompleted == null)) {
                this.FnUpdateProffessionaBodiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdateProffessionaBodiesOperationCompleted);
            }
            this.InvokeAsync("FnUpdateProffessionaBodies", new object[] {
                        entryNumber,
                        applicantNumber,
                        professionalbody,
                        registrationNumber,
                        membershipType,
                        renewalDate,
                        licensingNumber,
                        licenseRenewalDate}, this.FnUpdateProffessionaBodiesOperationCompleted, userState);
        }
        
        private void OnFnUpdateProffessionaBodiesOperationCompleted(object arg) {
            if ((this.FnUpdateProffessionaBodiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdateProffessionaBodiesCompleted(this, new FnUpdateProffessionaBodiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eRecruitment:FnApplicationProffessionaBod" +
            "ies", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", ResponseElementName="FnApplicationProffessionaBodies_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnApplicationProffessionaBodies(string applicantNumber, string jobApplicationNo, string professionalbody, string registrationNumber, string membershipType, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime renewalDate, string licensingNumber, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime licenseRenewalDate) {
            object[] results = this.Invoke("FnApplicationProffessionaBodies", new object[] {
                        applicantNumber,
                        jobApplicationNo,
                        professionalbody,
                        registrationNumber,
                        membershipType,
                        renewalDate,
                        licensingNumber,
                        licenseRenewalDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnApplicationProffessionaBodiesAsync(string applicantNumber, string jobApplicationNo, string professionalbody, string registrationNumber, string membershipType, System.DateTime renewalDate, string licensingNumber, System.DateTime licenseRenewalDate) {
            this.FnApplicationProffessionaBodiesAsync(applicantNumber, jobApplicationNo, professionalbody, registrationNumber, membershipType, renewalDate, licensingNumber, licenseRenewalDate, null);
        }
        
        /// <remarks/>
        public void FnApplicationProffessionaBodiesAsync(string applicantNumber, string jobApplicationNo, string professionalbody, string registrationNumber, string membershipType, System.DateTime renewalDate, string licensingNumber, System.DateTime licenseRenewalDate, object userState) {
            if ((this.FnApplicationProffessionaBodiesOperationCompleted == null)) {
                this.FnApplicationProffessionaBodiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnApplicationProffessionaBodiesOperationCompleted);
            }
            this.InvokeAsync("FnApplicationProffessionaBodies", new object[] {
                        applicantNumber,
                        jobApplicationNo,
                        professionalbody,
                        registrationNumber,
                        membershipType,
                        renewalDate,
                        licensingNumber,
                        licenseRenewalDate}, this.FnApplicationProffessionaBodiesOperationCompleted, userState);
        }
        
        private void OnFnApplicationProffessionaBodiesOperationCompleted(object arg) {
            if ((this.FnApplicationProffessionaBodiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnApplicationProffessionaBodiesCompleted(this, new FnApplicationProffessionaBodiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eRecruitment:FnWorkExperience", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", ResponseElementName="FnWorkExperience_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnWorkExperience(string applicantNumber, string employerName, string jobdesignation, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime employmentstartdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime employmentenddate, int termsofservice, string experienceyears, string dutiesresponsibilities) {
            object[] results = this.Invoke("FnWorkExperience", new object[] {
                        applicantNumber,
                        employerName,
                        jobdesignation,
                        employmentstartdate,
                        employmentenddate,
                        termsofservice,
                        experienceyears,
                        dutiesresponsibilities});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnWorkExperienceAsync(string applicantNumber, string employerName, string jobdesignation, System.DateTime employmentstartdate, System.DateTime employmentenddate, int termsofservice, string experienceyears, string dutiesresponsibilities) {
            this.FnWorkExperienceAsync(applicantNumber, employerName, jobdesignation, employmentstartdate, employmentenddate, termsofservice, experienceyears, dutiesresponsibilities, null);
        }
        
        /// <remarks/>
        public void FnWorkExperienceAsync(string applicantNumber, string employerName, string jobdesignation, System.DateTime employmentstartdate, System.DateTime employmentenddate, int termsofservice, string experienceyears, string dutiesresponsibilities, object userState) {
            if ((this.FnWorkExperienceOperationCompleted == null)) {
                this.FnWorkExperienceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnWorkExperienceOperationCompleted);
            }
            this.InvokeAsync("FnWorkExperience", new object[] {
                        applicantNumber,
                        employerName,
                        jobdesignation,
                        employmentstartdate,
                        employmentenddate,
                        termsofservice,
                        experienceyears,
                        dutiesresponsibilities}, this.FnWorkExperienceOperationCompleted, userState);
        }
        
        private void OnFnWorkExperienceOperationCompleted(object arg) {
            if ((this.FnWorkExperienceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnWorkExperienceCompleted(this, new FnWorkExperienceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eRecruitment:FnUpdateWorkExperience", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", ResponseElementName="FnUpdateWorkExperience_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnUpdateWorkExperience(int entryNumber, string applicantNumber, string employerName, string jobdesignation, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime employmentstartdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime employmentenddate, int termsofservice, string experienceyears, string dutiesresponsibilities) {
            object[] results = this.Invoke("FnUpdateWorkExperience", new object[] {
                        entryNumber,
                        applicantNumber,
                        employerName,
                        jobdesignation,
                        employmentstartdate,
                        employmentenddate,
                        termsofservice,
                        experienceyears,
                        dutiesresponsibilities});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnUpdateWorkExperienceAsync(int entryNumber, string applicantNumber, string employerName, string jobdesignation, System.DateTime employmentstartdate, System.DateTime employmentenddate, int termsofservice, string experienceyears, string dutiesresponsibilities) {
            this.FnUpdateWorkExperienceAsync(entryNumber, applicantNumber, employerName, jobdesignation, employmentstartdate, employmentenddate, termsofservice, experienceyears, dutiesresponsibilities, null);
        }
        
        /// <remarks/>
        public void FnUpdateWorkExperienceAsync(int entryNumber, string applicantNumber, string employerName, string jobdesignation, System.DateTime employmentstartdate, System.DateTime employmentenddate, int termsofservice, string experienceyears, string dutiesresponsibilities, object userState) {
            if ((this.FnUpdateWorkExperienceOperationCompleted == null)) {
                this.FnUpdateWorkExperienceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnUpdateWorkExperienceOperationCompleted);
            }
            this.InvokeAsync("FnUpdateWorkExperience", new object[] {
                        entryNumber,
                        applicantNumber,
                        employerName,
                        jobdesignation,
                        employmentstartdate,
                        employmentenddate,
                        termsofservice,
                        experienceyears,
                        dutiesresponsibilities}, this.FnUpdateWorkExperienceOperationCompleted, userState);
        }
        
        private void OnFnUpdateWorkExperienceOperationCompleted(object arg) {
            if ((this.FnUpdateWorkExperienceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnUpdateWorkExperienceCompleted(this, new FnUpdateWorkExperienceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eRecruitment:FnApplicationWorkExperience", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", ResponseElementName="FnApplicationWorkExperience_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnApplicationWorkExperience(string applicantNumber, string jobApplicationNo, string employerName, string jobdesignation, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime employmentstartdate, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime employmentenddate, int termsofservice, string experienceyears, string dutiesresponsibilities) {
            object[] results = this.Invoke("FnApplicationWorkExperience", new object[] {
                        applicantNumber,
                        jobApplicationNo,
                        employerName,
                        jobdesignation,
                        employmentstartdate,
                        employmentenddate,
                        termsofservice,
                        experienceyears,
                        dutiesresponsibilities});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnApplicationWorkExperienceAsync(string applicantNumber, string jobApplicationNo, string employerName, string jobdesignation, System.DateTime employmentstartdate, System.DateTime employmentenddate, int termsofservice, string experienceyears, string dutiesresponsibilities) {
            this.FnApplicationWorkExperienceAsync(applicantNumber, jobApplicationNo, employerName, jobdesignation, employmentstartdate, employmentenddate, termsofservice, experienceyears, dutiesresponsibilities, null);
        }
        
        /// <remarks/>
        public void FnApplicationWorkExperienceAsync(string applicantNumber, string jobApplicationNo, string employerName, string jobdesignation, System.DateTime employmentstartdate, System.DateTime employmentenddate, int termsofservice, string experienceyears, string dutiesresponsibilities, object userState) {
            if ((this.FnApplicationWorkExperienceOperationCompleted == null)) {
                this.FnApplicationWorkExperienceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnApplicationWorkExperienceOperationCompleted);
            }
            this.InvokeAsync("FnApplicationWorkExperience", new object[] {
                        applicantNumber,
                        jobApplicationNo,
                        employerName,
                        jobdesignation,
                        employmentstartdate,
                        employmentenddate,
                        termsofservice,
                        experienceyears,
                        dutiesresponsibilities}, this.FnApplicationWorkExperienceOperationCompleted, userState);
        }
        
        private void OnFnApplicationWorkExperienceOperationCompleted(object arg) {
            if ((this.FnApplicationWorkExperienceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnApplicationWorkExperienceCompleted(this, new FnApplicationWorkExperienceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eRecruitment:FnCandidateReferees", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", ResponseElementName="FnCandidateReferees_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCandidateReferees(string appplicantNumber, int refereetype, string title, string surname, string firtsname, string otherNames, string contactdesignations, string emailaddress, string phonenumber, string relationship, string country, int periodknown, string institution) {
            object[] results = this.Invoke("FnCandidateReferees", new object[] {
                        appplicantNumber,
                        refereetype,
                        title,
                        surname,
                        firtsname,
                        otherNames,
                        contactdesignations,
                        emailaddress,
                        phonenumber,
                        relationship,
                        country,
                        periodknown,
                        institution});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCandidateRefereesAsync(string appplicantNumber, int refereetype, string title, string surname, string firtsname, string otherNames, string contactdesignations, string emailaddress, string phonenumber, string relationship, string country, int periodknown, string institution) {
            this.FnCandidateRefereesAsync(appplicantNumber, refereetype, title, surname, firtsname, otherNames, contactdesignations, emailaddress, phonenumber, relationship, country, periodknown, institution, null);
        }
        
        /// <remarks/>
        public void FnCandidateRefereesAsync(string appplicantNumber, int refereetype, string title, string surname, string firtsname, string otherNames, string contactdesignations, string emailaddress, string phonenumber, string relationship, string country, int periodknown, string institution, object userState) {
            if ((this.FnCandidateRefereesOperationCompleted == null)) {
                this.FnCandidateRefereesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCandidateRefereesOperationCompleted);
            }
            this.InvokeAsync("FnCandidateReferees", new object[] {
                        appplicantNumber,
                        refereetype,
                        title,
                        surname,
                        firtsname,
                        otherNames,
                        contactdesignations,
                        emailaddress,
                        phonenumber,
                        relationship,
                        country,
                        periodknown,
                        institution}, this.FnCandidateRefereesOperationCompleted, userState);
        }
        
        private void OnFnCandidateRefereesOperationCompleted(object arg) {
            if ((this.FnCandidateRefereesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCandidateRefereesCompleted(this, new FnCandidateRefereesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eRecruitment:FnApplicationCandidateRefere" +
            "es", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", ResponseElementName="FnApplicationCandidateReferees_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnApplicationCandidateReferees(string appplicantNumber, string jobApplicationNo, int refereetype, string title, string surname, string firtsname, string otherNames, string contactdesignations, string emailaddress, string phonenumber, string relationship, string country, string periodknown, string institution) {
            object[] results = this.Invoke("FnApplicationCandidateReferees", new object[] {
                        appplicantNumber,
                        jobApplicationNo,
                        refereetype,
                        title,
                        surname,
                        firtsname,
                        otherNames,
                        contactdesignations,
                        emailaddress,
                        phonenumber,
                        relationship,
                        country,
                        periodknown,
                        institution});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnApplicationCandidateRefereesAsync(string appplicantNumber, string jobApplicationNo, int refereetype, string title, string surname, string firtsname, string otherNames, string contactdesignations, string emailaddress, string phonenumber, string relationship, string country, string periodknown, string institution) {
            this.FnApplicationCandidateRefereesAsync(appplicantNumber, jobApplicationNo, refereetype, title, surname, firtsname, otherNames, contactdesignations, emailaddress, phonenumber, relationship, country, periodknown, institution, null);
        }
        
        /// <remarks/>
        public void FnApplicationCandidateRefereesAsync(string appplicantNumber, string jobApplicationNo, int refereetype, string title, string surname, string firtsname, string otherNames, string contactdesignations, string emailaddress, string phonenumber, string relationship, string country, string periodknown, string institution, object userState) {
            if ((this.FnApplicationCandidateRefereesOperationCompleted == null)) {
                this.FnApplicationCandidateRefereesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnApplicationCandidateRefereesOperationCompleted);
            }
            this.InvokeAsync("FnApplicationCandidateReferees", new object[] {
                        appplicantNumber,
                        jobApplicationNo,
                        refereetype,
                        title,
                        surname,
                        firtsname,
                        otherNames,
                        contactdesignations,
                        emailaddress,
                        phonenumber,
                        relationship,
                        country,
                        periodknown,
                        institution}, this.FnApplicationCandidateRefereesOperationCompleted, userState);
        }
        
        private void OnFnApplicationCandidateRefereesOperationCompleted(object arg) {
            if ((this.FnApplicationCandidateRefereesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnApplicationCandidateRefereesCompleted(this, new FnApplicationCandidateRefereesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eRecruitment:FnJobApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", ResponseElementName="FnJobApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnJobApplication(string applicantNumber, string vacancyId) {
            object[] results = this.Invoke("FnJobApplication", new object[] {
                        applicantNumber,
                        vacancyId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnJobApplicationAsync(string applicantNumber, string vacancyId) {
            this.FnJobApplicationAsync(applicantNumber, vacancyId, null);
        }
        
        /// <remarks/>
        public void FnJobApplicationAsync(string applicantNumber, string vacancyId, object userState) {
            if ((this.FnJobApplicationOperationCompleted == null)) {
                this.FnJobApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnJobApplicationOperationCompleted);
            }
            this.InvokeAsync("FnJobApplication", new object[] {
                        applicantNumber,
                        vacancyId}, this.FnJobApplicationOperationCompleted, userState);
        }
        
        private void OnFnJobApplicationOperationCompleted(object arg) {
            if ((this.FnJobApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnJobApplicationCompleted(this, new FnJobApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eRecruitment:FnPrepopulateApplicantProfil" +
            "e", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", ResponseElementName="FnPrepopulateApplicantProfile_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnPrepopulateApplicantProfile(string candindateNo, string applicationNo, string vacancyId) {
            object[] results = this.Invoke("FnPrepopulateApplicantProfile", new object[] {
                        candindateNo,
                        applicationNo,
                        vacancyId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnPrepopulateApplicantProfileAsync(string candindateNo, string applicationNo, string vacancyId) {
            this.FnPrepopulateApplicantProfileAsync(candindateNo, applicationNo, vacancyId, null);
        }
        
        /// <remarks/>
        public void FnPrepopulateApplicantProfileAsync(string candindateNo, string applicationNo, string vacancyId, object userState) {
            if ((this.FnPrepopulateApplicantProfileOperationCompleted == null)) {
                this.FnPrepopulateApplicantProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnPrepopulateApplicantProfileOperationCompleted);
            }
            this.InvokeAsync("FnPrepopulateApplicantProfile", new object[] {
                        candindateNo,
                        applicationNo,
                        vacancyId}, this.FnPrepopulateApplicantProfileOperationCompleted, userState);
        }
        
        private void OnFnPrepopulateApplicantProfileOperationCompleted(object arg) {
            if ((this.FnPrepopulateApplicantProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnPrepopulateApplicantProfileCompleted(this, new FnPrepopulateApplicantProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eRecruitment:FnSubmitProfileApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", ResponseElementName="FnSubmitProfileApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSubmitProfileApplication(string applicantNumber) {
            object[] results = this.Invoke("FnSubmitProfileApplication", new object[] {
                        applicantNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitProfileApplicationAsync(string applicantNumber) {
            this.FnSubmitProfileApplicationAsync(applicantNumber, null);
        }
        
        /// <remarks/>
        public void FnSubmitProfileApplicationAsync(string applicantNumber, object userState) {
            if ((this.FnSubmitProfileApplicationOperationCompleted == null)) {
                this.FnSubmitProfileApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitProfileApplicationOperationCompleted);
            }
            this.InvokeAsync("FnSubmitProfileApplication", new object[] {
                        applicantNumber}, this.FnSubmitProfileApplicationOperationCompleted, userState);
        }
        
        private void OnFnSubmitProfileApplicationOperationCompleted(object arg) {
            if ((this.FnSubmitProfileApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitProfileApplicationCompleted(this, new FnSubmitProfileApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eRecruitment:FnChangeCandidatePassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", ResponseElementName="FnChangeCandidatePassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnChangeCandidatePassword(string emailaddress, string currentPassword, string newPassword, string confirmNewPassword) {
            object[] results = this.Invoke("FnChangeCandidatePassword", new object[] {
                        emailaddress,
                        currentPassword,
                        newPassword,
                        confirmNewPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnChangeCandidatePasswordAsync(string emailaddress, string currentPassword, string newPassword, string confirmNewPassword) {
            this.FnChangeCandidatePasswordAsync(emailaddress, currentPassword, newPassword, confirmNewPassword, null);
        }
        
        /// <remarks/>
        public void FnChangeCandidatePasswordAsync(string emailaddress, string currentPassword, string newPassword, string confirmNewPassword, object userState) {
            if ((this.FnChangeCandidatePasswordOperationCompleted == null)) {
                this.FnChangeCandidatePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnChangeCandidatePasswordOperationCompleted);
            }
            this.InvokeAsync("FnChangeCandidatePassword", new object[] {
                        emailaddress,
                        currentPassword,
                        newPassword,
                        confirmNewPassword}, this.FnChangeCandidatePasswordOperationCompleted, userState);
        }
        
        private void OnFnChangeCandidatePasswordOperationCompleted(object arg) {
            if ((this.FnChangeCandidatePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnChangeCandidatePasswordCompleted(this, new FnChangeCandidatePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eRecruitment:SendAccountActivationLink", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", ResponseElementName="SendAccountActivationLink_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendAccountActivationLink(string emailaddress) {
            object[] results = this.Invoke("SendAccountActivationLink", new object[] {
                        emailaddress});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendAccountActivationLinkAsync(string emailaddress) {
            this.SendAccountActivationLinkAsync(emailaddress, null);
        }
        
        /// <remarks/>
        public void SendAccountActivationLinkAsync(string emailaddress, object userState) {
            if ((this.SendAccountActivationLinkOperationCompleted == null)) {
                this.SendAccountActivationLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendAccountActivationLinkOperationCompleted);
            }
            this.InvokeAsync("SendAccountActivationLink", new object[] {
                        emailaddress}, this.SendAccountActivationLinkOperationCompleted, userState);
        }
        
        private void OnSendAccountActivationLinkOperationCompleted(object arg) {
            if ((this.SendAccountActivationLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendAccountActivationLinkCompleted(this, new SendAccountActivationLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eRecruitment:FnDeleteAacademicDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", ResponseElementName="FnDeleteAacademicDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteAacademicDetails(int entryNumber, string candidateNumber) {
            object[] results = this.Invoke("FnDeleteAacademicDetails", new object[] {
                        entryNumber,
                        candidateNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteAacademicDetailsAsync(int entryNumber, string candidateNumber) {
            this.FnDeleteAacademicDetailsAsync(entryNumber, candidateNumber, null);
        }
        
        /// <remarks/>
        public void FnDeleteAacademicDetailsAsync(int entryNumber, string candidateNumber, object userState) {
            if ((this.FnDeleteAacademicDetailsOperationCompleted == null)) {
                this.FnDeleteAacademicDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteAacademicDetailsOperationCompleted);
            }
            this.InvokeAsync("FnDeleteAacademicDetails", new object[] {
                        entryNumber,
                        candidateNumber}, this.FnDeleteAacademicDetailsOperationCompleted, userState);
        }
        
        private void OnFnDeleteAacademicDetailsOperationCompleted(object arg) {
            if ((this.FnDeleteAacademicDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteAacademicDetailsCompleted(this, new FnDeleteAacademicDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eRecruitment:FnDeleteJobAcademicDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", ResponseElementName="FnDeleteJobAcademicDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteJobAcademicDetails(int entryNumber, string candidateNumber) {
            object[] results = this.Invoke("FnDeleteJobAcademicDetails", new object[] {
                        entryNumber,
                        candidateNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteJobAcademicDetailsAsync(int entryNumber, string candidateNumber) {
            this.FnDeleteJobAcademicDetailsAsync(entryNumber, candidateNumber, null);
        }
        
        /// <remarks/>
        public void FnDeleteJobAcademicDetailsAsync(int entryNumber, string candidateNumber, object userState) {
            if ((this.FnDeleteJobAcademicDetailsOperationCompleted == null)) {
                this.FnDeleteJobAcademicDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteJobAcademicDetailsOperationCompleted);
            }
            this.InvokeAsync("FnDeleteJobAcademicDetails", new object[] {
                        entryNumber,
                        candidateNumber}, this.FnDeleteJobAcademicDetailsOperationCompleted, userState);
        }
        
        private void OnFnDeleteJobAcademicDetailsOperationCompleted(object arg) {
            if ((this.FnDeleteJobAcademicDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteJobAcademicDetailsCompleted(this, new FnDeleteJobAcademicDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eRecruitment:FnDeleteProffessionalQualifi" +
            "cationDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", ResponseElementName="FnDeleteProffessionalQualificationDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteProffessionalQualificationDetails(int entryNumber, string candidateNumber) {
            object[] results = this.Invoke("FnDeleteProffessionalQualificationDetails", new object[] {
                        entryNumber,
                        candidateNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteProffessionalQualificationDetailsAsync(int entryNumber, string candidateNumber) {
            this.FnDeleteProffessionalQualificationDetailsAsync(entryNumber, candidateNumber, null);
        }
        
        /// <remarks/>
        public void FnDeleteProffessionalQualificationDetailsAsync(int entryNumber, string candidateNumber, object userState) {
            if ((this.FnDeleteProffessionalQualificationDetailsOperationCompleted == null)) {
                this.FnDeleteProffessionalQualificationDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteProffessionalQualificationDetailsOperationCompleted);
            }
            this.InvokeAsync("FnDeleteProffessionalQualificationDetails", new object[] {
                        entryNumber,
                        candidateNumber}, this.FnDeleteProffessionalQualificationDetailsOperationCompleted, userState);
        }
        
        private void OnFnDeleteProffessionalQualificationDetailsOperationCompleted(object arg) {
            if ((this.FnDeleteProffessionalQualificationDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteProffessionalQualificationDetailsCompleted(this, new FnDeleteProffessionalQualificationDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eRecruitment:FnDeleteProffessionalQualifi" +
            "cationBodiesDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", ResponseElementName="FnDeleteProffessionalQualificationBodiesDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteProffessionalQualificationBodiesDetails(int entryNumber, string candidateNumber) {
            object[] results = this.Invoke("FnDeleteProffessionalQualificationBodiesDetails", new object[] {
                        entryNumber,
                        candidateNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteProffessionalQualificationBodiesDetailsAsync(int entryNumber, string candidateNumber) {
            this.FnDeleteProffessionalQualificationBodiesDetailsAsync(entryNumber, candidateNumber, null);
        }
        
        /// <remarks/>
        public void FnDeleteProffessionalQualificationBodiesDetailsAsync(int entryNumber, string candidateNumber, object userState) {
            if ((this.FnDeleteProffessionalQualificationBodiesDetailsOperationCompleted == null)) {
                this.FnDeleteProffessionalQualificationBodiesDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteProffessionalQualificationBodiesDetailsOperationCompleted);
            }
            this.InvokeAsync("FnDeleteProffessionalQualificationBodiesDetails", new object[] {
                        entryNumber,
                        candidateNumber}, this.FnDeleteProffessionalQualificationBodiesDetailsOperationCompleted, userState);
        }
        
        private void OnFnDeleteProffessionalQualificationBodiesDetailsOperationCompleted(object arg) {
            if ((this.FnDeleteProffessionalQualificationBodiesDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteProffessionalQualificationBodiesDetailsCompleted(this, new FnDeleteProffessionalQualificationBodiesDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eRecruitment:FnDeleteWorkExperienceDetail" +
            "s", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", ResponseElementName="FnDeleteWorkExperienceDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteWorkExperienceDetails(int entryNumber, string candidateNumber) {
            object[] results = this.Invoke("FnDeleteWorkExperienceDetails", new object[] {
                        entryNumber,
                        candidateNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteWorkExperienceDetailsAsync(int entryNumber, string candidateNumber) {
            this.FnDeleteWorkExperienceDetailsAsync(entryNumber, candidateNumber, null);
        }
        
        /// <remarks/>
        public void FnDeleteWorkExperienceDetailsAsync(int entryNumber, string candidateNumber, object userState) {
            if ((this.FnDeleteWorkExperienceDetailsOperationCompleted == null)) {
                this.FnDeleteWorkExperienceDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteWorkExperienceDetailsOperationCompleted);
            }
            this.InvokeAsync("FnDeleteWorkExperienceDetails", new object[] {
                        entryNumber,
                        candidateNumber}, this.FnDeleteWorkExperienceDetailsOperationCompleted, userState);
        }
        
        private void OnFnDeleteWorkExperienceDetailsOperationCompleted(object arg) {
            if ((this.FnDeleteWorkExperienceDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteWorkExperienceDetailsCompleted(this, new FnDeleteWorkExperienceDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eRecruitment:FnDeleteRefereeDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", ResponseElementName="FnDeleteRefereeDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteRefereeDetails(int entryNumber, string candidateNumber) {
            object[] results = this.Invoke("FnDeleteRefereeDetails", new object[] {
                        entryNumber,
                        candidateNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteRefereeDetailsAsync(int entryNumber, string candidateNumber) {
            this.FnDeleteRefereeDetailsAsync(entryNumber, candidateNumber, null);
        }
        
        /// <remarks/>
        public void FnDeleteRefereeDetailsAsync(int entryNumber, string candidateNumber, object userState) {
            if ((this.FnDeleteRefereeDetailsOperationCompleted == null)) {
                this.FnDeleteRefereeDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteRefereeDetailsOperationCompleted);
            }
            this.InvokeAsync("FnDeleteRefereeDetails", new object[] {
                        entryNumber,
                        candidateNumber}, this.FnDeleteRefereeDetailsOperationCompleted, userState);
        }
        
        private void OnFnDeleteRefereeDetailsOperationCompleted(object arg) {
            if ((this.FnDeleteRefereeDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteRefereeDetailsCompleted(this, new FnDeleteRefereeDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eRecruitment:FnDeleteJobProffesionalQuali" +
            "ficationDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", ResponseElementName="FnDeleteJobProffesionalQualificationDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteJobProffesionalQualificationDetails(int entryNumber, string candidateNumber) {
            object[] results = this.Invoke("FnDeleteJobProffesionalQualificationDetails", new object[] {
                        entryNumber,
                        candidateNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteJobProffesionalQualificationDetailsAsync(int entryNumber, string candidateNumber) {
            this.FnDeleteJobProffesionalQualificationDetailsAsync(entryNumber, candidateNumber, null);
        }
        
        /// <remarks/>
        public void FnDeleteJobProffesionalQualificationDetailsAsync(int entryNumber, string candidateNumber, object userState) {
            if ((this.FnDeleteJobProffesionalQualificationDetailsOperationCompleted == null)) {
                this.FnDeleteJobProffesionalQualificationDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteJobProffesionalQualificationDetailsOperationCompleted);
            }
            this.InvokeAsync("FnDeleteJobProffesionalQualificationDetails", new object[] {
                        entryNumber,
                        candidateNumber}, this.FnDeleteJobProffesionalQualificationDetailsOperationCompleted, userState);
        }
        
        private void OnFnDeleteJobProffesionalQualificationDetailsOperationCompleted(object arg) {
            if ((this.FnDeleteJobProffesionalQualificationDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteJobProffesionalQualificationDetailsCompleted(this, new FnDeleteJobProffesionalQualificationDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eRecruitment:FnDeleteJobProffesionalBodie" +
            "sDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", ResponseElementName="FnDeleteJobProffesionalBodiesDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteJobProffesionalBodiesDetails(int entryNumber, string candidateNumber) {
            object[] results = this.Invoke("FnDeleteJobProffesionalBodiesDetails", new object[] {
                        entryNumber,
                        candidateNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteJobProffesionalBodiesDetailsAsync(int entryNumber, string candidateNumber) {
            this.FnDeleteJobProffesionalBodiesDetailsAsync(entryNumber, candidateNumber, null);
        }
        
        /// <remarks/>
        public void FnDeleteJobProffesionalBodiesDetailsAsync(int entryNumber, string candidateNumber, object userState) {
            if ((this.FnDeleteJobProffesionalBodiesDetailsOperationCompleted == null)) {
                this.FnDeleteJobProffesionalBodiesDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteJobProffesionalBodiesDetailsOperationCompleted);
            }
            this.InvokeAsync("FnDeleteJobProffesionalBodiesDetails", new object[] {
                        entryNumber,
                        candidateNumber}, this.FnDeleteJobProffesionalBodiesDetailsOperationCompleted, userState);
        }
        
        private void OnFnDeleteJobProffesionalBodiesDetailsOperationCompleted(object arg) {
            if ((this.FnDeleteJobProffesionalBodiesDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteJobProffesionalBodiesDetailsCompleted(this, new FnDeleteJobProffesionalBodiesDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eRecruitment:FnDeleteJobApplicationRefere" +
            "eDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", ResponseElementName="FnDeleteJobApplicationRefereeDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnDeleteJobApplicationRefereeDetails(int entryNumber, string candidateNumber) {
            object[] results = this.Invoke("FnDeleteJobApplicationRefereeDetails", new object[] {
                        entryNumber,
                        candidateNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteJobApplicationRefereeDetailsAsync(int entryNumber, string candidateNumber) {
            this.FnDeleteJobApplicationRefereeDetailsAsync(entryNumber, candidateNumber, null);
        }
        
        /// <remarks/>
        public void FnDeleteJobApplicationRefereeDetailsAsync(int entryNumber, string candidateNumber, object userState) {
            if ((this.FnDeleteJobApplicationRefereeDetailsOperationCompleted == null)) {
                this.FnDeleteJobApplicationRefereeDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteJobApplicationRefereeDetailsOperationCompleted);
            }
            this.InvokeAsync("FnDeleteJobApplicationRefereeDetails", new object[] {
                        entryNumber,
                        candidateNumber}, this.FnDeleteJobApplicationRefereeDetailsOperationCompleted, userState);
        }
        
        private void OnFnDeleteJobApplicationRefereeDetailsOperationCompleted(object arg) {
            if ((this.FnDeleteJobApplicationRefereeDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteJobApplicationRefereeDetailsCompleted(this, new FnDeleteJobApplicationRefereeDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/eRecruitment:FnCreateCandidateDocumentsLi" +
            "nk", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", ResponseElementName="FnCreateCandidateDocumentsLink_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/eRecruitment", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnCreateCandidateDocumentsLink(string applicantNo, string applicationNo, string fileName, string fileLink) {
            object[] results = this.Invoke("FnCreateCandidateDocumentsLink", new object[] {
                        applicantNo,
                        applicationNo,
                        fileName,
                        fileLink});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreateCandidateDocumentsLinkAsync(string applicantNo, string applicationNo, string fileName, string fileLink) {
            this.FnCreateCandidateDocumentsLinkAsync(applicantNo, applicationNo, fileName, fileLink, null);
        }
        
        /// <remarks/>
        public void FnCreateCandidateDocumentsLinkAsync(string applicantNo, string applicationNo, string fileName, string fileLink, object userState) {
            if ((this.FnCreateCandidateDocumentsLinkOperationCompleted == null)) {
                this.FnCreateCandidateDocumentsLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateCandidateDocumentsLinkOperationCompleted);
            }
            this.InvokeAsync("FnCreateCandidateDocumentsLink", new object[] {
                        applicantNo,
                        applicationNo,
                        fileName,
                        fileLink}, this.FnCreateCandidateDocumentsLinkOperationCompleted, userState);
        }
        
        private void OnFnCreateCandidateDocumentsLinkOperationCompleted(object arg) {
            if ((this.FnCreateCandidateDocumentsLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateCandidateDocumentsLinkCompleted(this, new FnCreateCandidateDocumentsLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnSubmitApplicationCompletedEventHandler(object sender, FnSubmitApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnRegistrationCompletedEventHandler(object sender, FnRegistrationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRegistrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRegistrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnResetPasswordCompletedEventHandler(object sender, FnResetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ResetSendEmailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnApplicantProfileRegistrationCompletedEventHandler(object sender, FnApplicantProfileRegistrationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnApplicantProfileRegistrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnApplicantProfileRegistrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnAcademicQualificationsCompletedEventHandler(object sender, FnAcademicQualificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAcademicQualificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAcademicQualificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnUpdateAcademicQualificationsCompletedEventHandler(object sender, FnUpdateAcademicQualificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUpdateAcademicQualificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUpdateAcademicQualificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnApplicationAcademicQualificationsCompletedEventHandler(object sender, FnApplicationAcademicQualificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnApplicationAcademicQualificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnApplicationAcademicQualificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnUpdateApplicationAcademicQualificationsCompletedEventHandler(object sender, FnUpdateApplicationAcademicQualificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUpdateApplicationAcademicQualificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUpdateApplicationAcademicQualificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnProffessionalQualificationsCompletedEventHandler(object sender, FnProffessionalQualificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnProffessionalQualificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnProffessionalQualificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnUpdateProffessionalQualificationsCompletedEventHandler(object sender, FnUpdateProffessionalQualificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUpdateProffessionalQualificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUpdateProffessionalQualificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnApplicationProffessionalQualificationsCompletedEventHandler(object sender, FnApplicationProffessionalQualificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnApplicationProffessionalQualificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnApplicationProffessionalQualificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnProffessionaBodiesCompletedEventHandler(object sender, FnProffessionaBodiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnProffessionaBodiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnProffessionaBodiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnUpdateProffessionaBodiesCompletedEventHandler(object sender, FnUpdateProffessionaBodiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUpdateProffessionaBodiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUpdateProffessionaBodiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnApplicationProffessionaBodiesCompletedEventHandler(object sender, FnApplicationProffessionaBodiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnApplicationProffessionaBodiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnApplicationProffessionaBodiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnWorkExperienceCompletedEventHandler(object sender, FnWorkExperienceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnWorkExperienceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnWorkExperienceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnUpdateWorkExperienceCompletedEventHandler(object sender, FnUpdateWorkExperienceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnUpdateWorkExperienceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnUpdateWorkExperienceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnApplicationWorkExperienceCompletedEventHandler(object sender, FnApplicationWorkExperienceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnApplicationWorkExperienceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnApplicationWorkExperienceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnCandidateRefereesCompletedEventHandler(object sender, FnCandidateRefereesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCandidateRefereesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCandidateRefereesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnApplicationCandidateRefereesCompletedEventHandler(object sender, FnApplicationCandidateRefereesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnApplicationCandidateRefereesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnApplicationCandidateRefereesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnJobApplicationCompletedEventHandler(object sender, FnJobApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnJobApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnJobApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnPrepopulateApplicantProfileCompletedEventHandler(object sender, FnPrepopulateApplicantProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnPrepopulateApplicantProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnPrepopulateApplicantProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnSubmitProfileApplicationCompletedEventHandler(object sender, FnSubmitProfileApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitProfileApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitProfileApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnChangeCandidatePasswordCompletedEventHandler(object sender, FnChangeCandidatePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnChangeCandidatePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnChangeCandidatePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void SendAccountActivationLinkCompletedEventHandler(object sender, SendAccountActivationLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendAccountActivationLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendAccountActivationLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnDeleteAacademicDetailsCompletedEventHandler(object sender, FnDeleteAacademicDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteAacademicDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteAacademicDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnDeleteJobAcademicDetailsCompletedEventHandler(object sender, FnDeleteJobAcademicDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteJobAcademicDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteJobAcademicDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnDeleteProffessionalQualificationDetailsCompletedEventHandler(object sender, FnDeleteProffessionalQualificationDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteProffessionalQualificationDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteProffessionalQualificationDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnDeleteProffessionalQualificationBodiesDetailsCompletedEventHandler(object sender, FnDeleteProffessionalQualificationBodiesDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteProffessionalQualificationBodiesDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteProffessionalQualificationBodiesDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnDeleteWorkExperienceDetailsCompletedEventHandler(object sender, FnDeleteWorkExperienceDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteWorkExperienceDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteWorkExperienceDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnDeleteRefereeDetailsCompletedEventHandler(object sender, FnDeleteRefereeDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteRefereeDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteRefereeDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnDeleteJobProffesionalQualificationDetailsCompletedEventHandler(object sender, FnDeleteJobProffesionalQualificationDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteJobProffesionalQualificationDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteJobProffesionalQualificationDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnDeleteJobProffesionalBodiesDetailsCompletedEventHandler(object sender, FnDeleteJobProffesionalBodiesDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteJobProffesionalBodiesDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteJobProffesionalBodiesDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnDeleteJobApplicationRefereeDetailsCompletedEventHandler(object sender, FnDeleteJobApplicationRefereeDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteJobApplicationRefereeDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteJobApplicationRefereeDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnCreateCandidateDocumentsLinkCompletedEventHandler(object sender, FnCreateCandidateDocumentsLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreateCandidateDocumentsLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreateCandidateDocumentsLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591